** two pointer! 
			define two indices to transverse through data structure (list etc)
** step!
	define two indices 
	left = 0
	right = len(n) - 1 
	
	we reverse two indices
	increment in left and decrement in right 
	if left greater then it is stop
	
	some time we add two indices
	if our req is greater then right is decrement / ,move to left
	if our req is less then left is increment / ,move to right
** type!
	opposite two pointer
	
n = [1,2,3,4]	reverse it
define two indices
1. left = 0
2. right = len(n) - 1 = 3
3. reverse left to right
4. increment in left, left = 1 and decrement in right = 2
5. reverse left to right
6. increment in left, left = 2 and decrement in right = 1
7. now all is reverse it is stop . if left greater then it is stop


n = [1,2,3,5.6,9]	check add two number is k = 8
define two indices
1. left = 0
2. right = len(n) - 1 = 5
3. add left and right and check add = k 
4. increment in left, left = 1 and decrement in right = 2
5. reverse left to right
6. increment in left, left = 2 and decrement in right = 1
7. now all is reverse it is stop . if left greater then it is stop


 
	
